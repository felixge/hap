// Hap - the simple and effective provisioner
// Copyright (c) 2014 Garrett Woodworth (https://github.com/gwoo)
package cli

import (
	"fmt"

	"github.com/gwoo/hap"
)

// Add the build command
func init() {
	Commands.Add("build", &BuildCmd{})
}

type BuildCmd struct {
	result []byte
	log    string
	build  string
}

// Return the result of the command
func (cmd *BuildCmd) String() string {
	return string(cmd.result)
}

// Return the log generated by the command
func (cmd *BuildCmd) Log() string {
	return cmd.log
}

// Get help on the build command
func (cmd *BuildCmd) Help() string {
	return "hap <build.json>\t\t\tRun the scripts provided by the json build list."
}

// Run the build command on the remote host
func (cmd *BuildCmd) Run(remote *hap.Remote) error {
	if cmd.build == "" {
		return fmt.Errorf("%s", cmd.Help())
	}
	result, err := remote.Build(cmd.build)
	cmd.result = result
	if err != nil {
		cmd.log = fmt.Sprintf("Build failed %s on %s.", cmd.build, remote.Config.Addr)
		return err
	}
	cmd.log = fmt.Sprintf("Build %s on %s.", cmd.build, remote.Config.Addr)
	return nil
}
